name: Deploy to Play Store

on:
  push:
    branches:
      - develop

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download dependencies
        run: npm install
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew
      - name: Generate Release AAB
        run: cd android && ./gradlew bundleRelease
      - name: print SIGNING_KEY
        run: 'echo "$SIGNING_KEY"'
        shell: bash
        env:
          SIGNING_KEY: ${{secrets.SIGNING_KEY}}
      - name: print ALIAS
        run: 'echo "$ALIAS"'
        shell: bash
        env:
          ALIAS: ${{secrets.ALIAS}}
      - name: print KEY_STORE_PASSWORD
        run: 'echo "$KEY_STORE_PASSWORD"'
        shell: bash
        env:
          KEY_STORE_PASSWORD: ${{secrets.KEY_STORE_PASSWORD}}
      - name: print KEY_PASSWORD
        run: 'echo "$KEY_PASSWORD"'
        shell: bash
        env:
          KEY_PASSWORD: ${{secrets.KEY_PASSWORD}}
      - name: Sign AAB
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - uses: actions/upload-artifact@master
        with:
          name: app-release.aab
          path: ${{steps.sign_app.outputs.signedReleaseFile}}
      - uses: actions/upload-artifact@master
        with:
          name: mapping.txt
          path: android/app/build/outputs/mapping/release/mapping.txt

  deploy-play-store:
    needs: [build-release]
    runs-on: ubuntu-latest
    steps:
      # 1
      - uses: actions/download-artifact@master
        with:
          name: app-release.aab
      - uses: actions/download-artifact@master
        with:
          name: mapping.txt
      # 2
      - name: Publish to Play Store internal test track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          # 3
          packageName: com.test.test.awesomeproject
          releaseFile: app-release.aab
          track: internal
          userFraction: 0.50
          mappingFile: mapping.txt